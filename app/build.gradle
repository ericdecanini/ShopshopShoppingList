plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

Properties properties = new Properties()
properties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion compileSdkVersionSet
    buildToolsVersion buildToolsVersion

    defaultConfig {
        applicationId "com.ericthecoder.shopshopshoppinglist"
        minSdkVersion minSdkVersionSet
        targetSdkVersion targetSdkVersionSet
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue("string", "admob_application_id", properties['admob.applicationId'])
        resValue("string", "admob_banner_ad_id", properties['admob.bannerAdId'])
        resValue("string", "admob_app_open_ad_id", properties['admob.appOpenAdId'])
        resValue("string", "billing_premium_sku", properties['billing.premiumSku'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        dataBinding true
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
            unitTests.returnDefaultValues = true
        }
    }
}

dependencies {
    implementation project(':entities')
    implementation project(':usecases')
    implementation project(':dataaccess')
    implementation project(':dependencies:android')
    implementation project(':dependencies:billing')

    implementation "androidx.core:core-ktx:${coreKtxVersion}"
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    // Room
    implementation "androidx.room:room-ktx:$roomVersion"

    // Preferences
    implementation "androidx.preference:preference-ktx:1.2.0"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"

    // Dagger
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Billing
    implementation "com.android.billingclient:billing:$billingVersion"
    implementation "com.android.billingclient:billing-ktx:$billingVersion"

    // Firebase
    implementation 'com.google.firebase:firebase-analytics:20.1.2'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.2.9'
    implementation 'com.google.firebase:firebase-ads:20.6.0'
    implementation 'com.google.firebase:firebase-messaging:23.0.2'

    testImplementation project(":testdata")
    testImplementation "org.assertj:assertj-core:${assertJVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}"
    testImplementation "android.arch.core:core-testing:${coreTestingVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesTestVersion}"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    // Mockito & Mockk
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
    testImplementation "io.mockk:mockk:${mockkVersion}"

    androidTestImplementation "androidx.test.ext:junit:${androidJUnitVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
}
